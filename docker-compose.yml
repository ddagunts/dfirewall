services:
  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: "always"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 15s
      timeout: 5s
      retries: 5
    command: ["redis-server"]
    ports:
      - 127.0.0.1:6379:6379
  dfirewall:
    depends_on:
      redis:
        condition: service_healthy
    container_name: dfirewall
    restart: "always"
    build: .
    network_mode: host  # Required for DNS interception, also exposes WEB_UI_PORT if enabled
    cap_add:
      - NET_ADMIN
    # Security hardening
    read_only: true
    tmpfs:
      - /tmp:rw,size=100M,mode=1777
      - /dev/shm:rw,size=100M,mode=1777
    security_opt:
      - no-new-privileges:true
    environment:
      #- "PORT=53"
      - "UPSTREAM=1.1.1.1:53"
      - "REDIS=redis://127.0.0.1:6379"
      - "ENABLE_EDNS=1" # Enable EDNS Client Subnet
      #- "DEBUG=1"
      - "INVOKE_SCRIPT=/scripts/invoke_linux_ipset.sh"
      - "EXPIRE_SCRIPT=/scripts/expire_generic.sh"   # Enable for non-Linux/non-ipset platforms
      - "SCRIPT_CONFIG=/config/script-config-ttl-example.json"  # Enable per-client script configuration with TTL examples
      - "BLACKLIST_CONFIG=/config/blacklist-config.example.json"  # Enable IP/domain blacklisting
      #- "REPUTATION_CONFIG=/config/reputation-config.json"       # Enable IP/domain reputation checking
      #- "AI_CONFIG=/config/ai-config.json"  # Enable AI-powered threat detection :D
      #- "CUSTOM_SCRIPT_CONFIG=/config/custom-script-config.json" # Enable custom script validation
      - "WEB_UI_PORT=8080" # Enable web UI for rule management
      #- "DNS_BIND_IP=127.0.0.1" # Bind DNS to loopback only (secure: localhost-only DNS queries)
      #- "WEBUI_BIND_IP=127.0.0.1" # Bind Web UI to loopback only (secure: localhost-only management access)
      # Network Interface Binding Options:
      # Default (all interfaces): Remove DNS_BIND_IP and WEBUI_BIND_IP entirely  
      # Internal network only: "DNS_BIND_IP=10.0.1.100" "WEBUI_BIND_IP=10.0.1.100"
      # Split interfaces: "DNS_BIND_IP=172.16.0.10" "WEBUI_BIND_IP=192.168.1.50"
      # IPv6 support: "DNS_BIND_IP=::1" "WEBUI_BIND_IP=2001:db8::1"
      - "INVOKE_ALWAYS=1"
      - "SYNC_SCRIPT_EXECUTION=1" # Execute scripts synchronously for reliable connectivity
      #- "HANDLE_ALL_IPS=1"
      - "ENABLE_AAAA_PROCESSING=false"
      #- "DAEMON=true"  # Run as daemon process (useful for non-Docker deployments, enables background mode)
      #- "PID_FILE=/var/run/dfirewall.pid"  # PID file location for daemon mode (requires writable directory)
    hostname: "dfirewall"
    image: "dfirewall:latest"
    # Override Dockerfile's nobody user for demonstration with local iptables/ipset scripts
    # For production: remove this line to use unprivileged nobody user with remote firewall management
    user: root
